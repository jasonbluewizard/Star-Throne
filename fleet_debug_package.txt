FLEET SYSTEM DEBUG PACKAGE
==========================

PROBLEM: Fleet system multi-hop transfers and enemy attacks not working. 1-hop transfers work fine.
Camera gets stuck on cursor for 2+ hop attempts.

ESSENTIAL FILES TO DEBUG:

1. client/src/game/Fleet.js
   - Main Fleet control system with handleClick, pathfinding, attack methods
   - Contains the problematic transferWithPathfinding and launchAttack functions
   
2. client/src/game/InputHandler.js  
   - Routes clicks to Fleet system first, then falls back to InputStateMachine
   - Lines 175-189 (left click routing) and 208-223 (right click routing)
   
3. client/src/game/InputStateMachine.js
   - Legacy input system that may be interfering with Fleet system
   - Contains TerritorySelectedState class with its own transfer logic
   
4. client/src/game/StarThrone.js
   - Main game class that initializes Fleet system in init() method
   - Lines 1-30 (imports) and init() method around line 300+

5. client/src/game/Territory.js
   - Territory class showing connection structure (neighbors array)
   - Used by Fleet pathfinding algorithm

CURRENT DEBUG STATE:
- Fleet.render() is being called (visible in logs)  
- Fleet.handleClick() is NOT being called (no debug messages)
- InputHandler should route clicks to Fleet first
- Multi-hop pathfinding uses BFS through player-owned territories
- 1-hop direct transfers work correctly

KEY DEBUGGING STEPS:
1. Verify Fleet system initialization ("Fleet control system initialized" message)
2. Check if InputHandler routing reaches Fleet.handleClick
3. Examine pathfinding algorithm in findShortestPath method
4. Test territory connection detection in areConnectedByWarpLane

SUSPECTED ISSUES:
- InputHandler not routing to Fleet system properly
- Fleet pathfinding algorithm failing to find paths
- Territory connection arrays using wrong property names
- Return value handling causing FSM fallback

This package should be sufficient for an advanced AI to identify and fix the Fleet system routing and pathfinding issues.