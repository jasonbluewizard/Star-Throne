Below is the **tiny, self‑contained patch** that makes a **single LMB click** perform the send (reinforce or invade) immediately—no drag required.
It assumes you’re now on the older **stable build** you just zipped.

### What the patch does

1. **Keeps single‑click to select when nothing is selected.**
2. **If a friendly planet is already selected:**

   * LMB on a **friendly** → reinforce (50 %; Shift = 100 %; Ctrl = 25 %).
   * LMB on an **enemy/neut** → attack (same % rules).
   * LMB on empty space → deselect.
3. Removes all RMB paths (they were dead).
4. Leaves drag/proportional‑slider intact (optional advanced gesture).

### Apply it in Replit AI

1. Open the AI chat pane.
2. Send

   ```
   Apply patch
   ```
3. Paste everything in the diff block and press **Enter**.
4. Hit **Run**; clicks will send fleets.

```diff
diff --git a/client/src/game/InputStateMachine.js b/client/src/game/InputStateMachine.js
@@ import
-import PathfindingService from './PathfindingService.js';
+import PathfindingService from './PathfindingService.js';   // unchanged
@@ TerritorySelectedState.handleInput
-            case 'click_left':
-                this.handleLeftClick(eventData);
-                break;
+            case 'click_left':   // single click now SENDS immediately
+                this.handleLeftClick(eventData);
+                break;
@@ remove right‑click branch (no longer used)
-            case 'click_right':
-                this.handleRightClick(eventData);
-                break;
+            // right‑click removed – all commands are single‑click
@@ handleLeftClick(eventData)   /* REPLACE the whole method */
-    handleLeftClick({ x, y }) {
-        // old code...
-    }
+    handleLeftClick({ x, y, shiftKey, ctrlKey }) {
+        const target = this.fsm.game.findTerritoryAt(x, y);
+        const source = this.fsm.selectedTerritory;
+
+        // ---------------- change selection ----------------
+        if (!source) {
+            if (target) {
+                this.fsm.selectTerritory(target);
+            }
+            return;
+        }
+
+        // ---------------- deselect ----------------
+        if (!target) {
+            this.fsm.deselect();
+            return;
+        }
+
+        // ---------------- same planet = no‑op -----------
+        if (target.id === source.id) return;
+
+        // ---------------- calculate send % --------------
+        let pct = 0.5;
+        if (shiftKey) pct = 1.0;
+        else if (ctrlKey) pct = 0.25;
+
+        // ---------------- friendly target ----------------
+        if (target.ownerId === source.ownerId) {
+            this.fsm.game.issueFleetCommand(source, target, pct);
+            // keep source selected so user can chain orders
+            return;
+        }
+
+        // ---------------- enemy / neutral target --------
+        this.fsm.game.issueFleetCommand(source, target, pct);
+        // source stays selected (common RTS feel)
+    }
-
-    // handleRightClick() removed completely
```

```diff
diff --git a/client/src/game/InputHandler.js b/client/src/game/InputHandler.js
@@ click dispatch – pass modifier keys
-    this.inputFSM.handleEvent('click_left', { x, y });
+    this.inputFSM.handleEvent('click_left', {
+        x: this.mousePos.x,
+        y: this.mousePos.y,
+        shiftKey: e.shiftKey,
+        ctrlKey:  e.ctrlKey
+    });
```

*(No other files touched. `issueFleetCommand` already handles multi‑hop if you choose to enable it later.)*

---

### After patch

* **Select**: single‑click any friendly planet.
* **Send 50 %**: click another planet (friendly → reinforce, enemy → attack).
* **Send 100 % / 25 %**: hold **Shift** / **Ctrl** while clicking.
* **Cancel / new source**: click empty space, then click a new planet.

This restores the classic tap‑tap flow and eliminates the “must deselect first” annoyance.  Test quickly with two planets: select A, click B → fleets move; click C → fleets move from A to C; Esc or background deselects.

Once you confirm this works, we can layer the clean multi‑hop-routing patch on top.
