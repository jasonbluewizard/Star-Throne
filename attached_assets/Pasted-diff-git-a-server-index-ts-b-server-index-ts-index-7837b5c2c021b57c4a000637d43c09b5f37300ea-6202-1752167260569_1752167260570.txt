diff --git a/server/index.ts b/server/index.ts
index 7837b5c2c021b57c4a000637d43c09b5f37300ea..62025ad90a19f4bad1655fb3519017aec1b1e8b2 100644
--- a/server/index.ts
+++ b/server/index.ts
@@ -23,49 +23,54 @@ app.use((req, res, next) => {
     const duration = Date.now() - start;
     if (path.startsWith("/api")) {
       let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;
       if (capturedJsonResponse) {
         logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;
       }
 
       if (logLine.length > 80) {
         logLine = logLine.slice(0, 79) + "â€¦";
       }
 
       log(logLine);
     }
   });
 
   next();
 });
 
 (async () => {
   const httpServer = createServer(app);
   const server = await registerRoutes(app);
   
   // Initialize game server with WebSocket support
   const gameServer = new GameServer(httpServer);
 
-  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {
+  app.use((err: any, _req: Request, res: Response, next: NextFunction) => {
     const status = err.status || err.statusCode || 500;
     const message = err.message || "Internal Server Error";
 
     res.status(status).json({ message });
-    throw err;
+    // Pass the error along for optional logging middleware without
+    // terminating the process. Removing the throw keeps the server
+    // running after sending the error response.
+    if (next) {
+      next(err);
+    }
   });
 
   // importantly only setup vite in development and after
   // setting up all the other routes so the catch-all route
   // doesn't interfere with the other routes
   if (app.get("env") === "development") {
     await setupVite(app, server);
   } else {
     serveStatic(app);
   }
 
   // ALWAYS serve the app on port 5000
   // this serves both the API and the client
   const port = 5000;
   httpServer.listen(port, "0.0.0.0", () => {
     log(`Server with WebSocket support running on port ${port}`);
   });
 })();
